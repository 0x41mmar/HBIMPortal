{"version":3,"sources":["webpack:///./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.scss?ee3e","webpack:///./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.js?ab09","webpack:///./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/smoothie.js?315f","webpack:///./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/index.js?d0b3","webpack:///./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.Container.js?bd6f","webpack:///./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.scss?a363*"],"names":["IoTGraph","state","value","thresholdSeries","dataSeries","chart","yRangeFunction","min","props","max","updateId","addTimeSeries","strokeStyle","fillStyle","lineWidth","streamTo","canvas","updateGraph","clearInterval","guid","clearTimeout","clear","update","t","Date","getTime","append","threshold","randomBase","Math","random","randomRange","setState","setTimeout","dimensions","name","rows","label","toFixed","width","isNaN","height","floor","style","div","Component","exports","Util","extend","arguments","i","length","key","hasOwnProperty","Array","TimeSeries","options","defaultOptions","resetBoundsInterval","resetBounds","prototype","data","maxValue","Number","NaN","minValue","timestamp","sumRepeatedTimeStampValues","splice","push","dropOldData","oldestValidTime","maxDataSetLength","removeCount","SmoothieChart","defaultChartOptions","seriesSet","currentValueRange","currentVisMinValue","lastRenderTimeMillis","millisPerPixel","enableDpiScaling","yMinFormatter","precision","parseFloat","yMaxFormatter","maxValueScale","interpolation","scaleSmoothing","grid","sharpLines","millisPerLine","verticalSections","borderVisible","labels","disabled","fontSize","fontFamily","horizontalLines","AnimateCompatibility","requestAnimationFrame","callback","element","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","call","cancelAnimationFrame","id","defaultSeriesPresentationOptions","timeSeries","resetBoundsTimerId","setInterval","removeTimeSeries","numSeries","getTimeSeriesOptions","bringToFront","set","delayMillis","delay","start","resize","devicePixelRatio","dpr","parseInt","getAttribute","originalWidth","setAttribute","toString","getContext","scale","originalHeight","frame","animate","render","bind","stop","updateValueRange","chartOptions","chartMaxValue","chartMinValue","d","range","targetValueRange","valueRangeDiff","minValueDiff","isAnimatingScale","abs","valueRange","time","nowMillis","maxIdleMillis","context","top","left","clientWidth","clientHeight","valueToYPixel","offset","round","timeToXPixel","font","save","translate","beginPath","rect","clip","clearRect","fillRect","restore","gx","moveTo","lineTo","stroke","closePath","v","gy","strokeRect","hl","line","hly","color","dataSet","seriesOptions","firstX","lastX","lastY","x","y","bezierCurveTo","fill","maxValueString","minValueString","fillText","measureText","timestampFormatter","textUntilX","tx","ts","tsWidth","timeFormatter","date","pad2","number","getHours","getMinutes","getSeconds","module","IoTGraphContainer","item","graphData","graphs","map","idx","graphName"],"mappings":"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","file":"53.js","sourcesContent":["exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".graph-container {\\n  background-color: rgba(171, 171, 171, 0.32);\\n  overflow: auto; }\\n\\n.graph-title {\\n  background: #ffffff;\\n  height: 30px; }\\n\\n.graph-title label {\\n  position: relative;\\n  margin-left: 20px;\\n  float: left;\\n  left: 10px;\\n  top: 4px; }\\n\\n.graph {\\n  float: left; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/postcss-loader?{}!./~/sass-loader!./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.scss\n// module id = 1175\n// module chunks = 21 53","import { TimeSeries as SmoothieTimeSeries, SmoothieChart } from './smoothie'\r\nimport React from 'react'\r\n\r\nexport default class IoTGraph extends React.Component {\r\n\r\n  /////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////\r\n  constructor () {\r\n\r\n    super()\r\n\r\n    this.state = {\r\n      value: 0\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////\r\n  componentDidMount () {\r\n\r\n    this.thresholdSeries = new SmoothieTimeSeries()\r\n\r\n    this.dataSeries = new SmoothieTimeSeries()\r\n\r\n    this.chart = new SmoothieChart({\r\n      yRangeFunction: () => {\r\n        return {\r\n          min: this.props.min,\r\n          max: this.props.max\r\n        }\r\n      }\r\n    })\r\n\r\n    this.updateId = 0\r\n\r\n    this.chart.addTimeSeries(this.thresholdSeries, {\r\n      strokeStyle: 'rgba(255, 0, 0, 1)',\r\n      fillStyle: 'rgba(255, 0, 0, 0.0)',\r\n      lineWidth: 1\r\n    })\r\n\r\n    this.chart.addTimeSeries(this.dataSeries, {\r\n      strokeStyle: 'rgba(0, 255, 0, 1)',\r\n      fillStyle: 'rgba(0, 255, 0, 0.2)',\r\n      lineWidth: 1\r\n    })\r\n\r\n    this.chart.streamTo(this.canvas, 100)\r\n\r\n    this.updateGraph(this.props)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////\r\n  componentWillUnmount () {\r\n\r\n    clearInterval(this.updateId)\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////\r\n  componentWillReceiveProps (props) {\r\n\r\n    if (props.guid !== this.props.guid) {\r\n\r\n      this.updateGraph(props)\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////\r\n  updateGraph (props) {\r\n\r\n    clearTimeout(this.updateId)\r\n\r\n    this.thresholdSeries.clear()\r\n    this.dataSeries.clear()\r\n\r\n    const update = () => {\r\n\r\n      const t = new Date().getTime()\r\n      this.thresholdSeries.append(t, this.props.threshold)\r\n\r\n      const value = this.props.value ||\r\n        props.randomBase + (0.5 - Math.random()) * props.randomRange\r\n\r\n      this.setState({\r\n        value\r\n      })\r\n\r\n      this.dataSeries.append(t, value)\r\n\r\n      this.updateId = setTimeout(update, 1000)\r\n    }\r\n\r\n    update()\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////\r\n  //\r\n  //\r\n  /////////////////////////////////////////////////////////\r\n  render () {\r\n\r\n    const {dimensions, name, rows} = this.props\r\n\r\n    const label = ` ${name}: ${this.state.value.toFixed(2)}`\r\n\r\n    const width = isNaN(dimensions.width)\r\n      ? 100 : dimensions.width - 1\r\n\r\n    const height = isNaN(dimensions.height)\r\n      ? 100 : Math.floor((dimensions.height - 2)/rows)\r\n\r\n    const style = {\r\n      height\r\n    }\r\n\r\n    return (\r\n      <div style={style}>\r\n        <div className=\"graph-title\">\r\n          <label>\r\n            { label }\r\n          </label>\r\n        </div>\r\n        <canvas ref={ (div) => this.canvas = div }\r\n          width={width} height={height-30}\r\n          className=\"graph\"\r\n        /> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.js","// MIT License:\r\n//\r\n// Copyright (c) 2010-2013, Joe Walnes\r\n//               2013-2014, Drew Noakes\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n/**\r\n * Smoothie Charts - http://smoothiecharts.org/\r\n * (c) 2010-2013, Joe Walnes\r\n *     2013-2014, Drew Noakes\r\n *\r\n * v1.0: Main charting library, by Joe Walnes\r\n * v1.1: Auto scaling of axis, by Neil Dunn\r\n * v1.2: fps (frames per second) option, by Mathias Petterson\r\n * v1.3: Fix for divide by zero, by Paul Nikitochkin\r\n * v1.4: Set minimum, top-scale padding, remove timeseries, add optional timer to reset bounds, by Kelley Reynolds\r\n * v1.5: Set default frames per second to 50... smoother.\r\n *       .start(), .stop() methods for conserving CPU, by Dmitry Vyal\r\n *       options.interpolation = 'bezier' or 'line', by Dmitry Vyal\r\n *       options.maxValue to fix scale, by Dmitry Vyal\r\n * v1.6: minValue/maxValue will always get converted to floats, by Przemek Matylla\r\n * v1.7: options.grid.fillStyle may be a transparent color, by Dmitry A. Shashkin\r\n *       Smooth rescaling, by Kostas Michalopoulos\r\n * v1.8: Set max length to customize number of live points in the dataset with options.maxDataSetLength, by Krishna Narni\r\n * v1.9: Display timestamps along the bottom, by Nick and Stev-io\r\n *       (https://groups.google.com/forum/?fromgroups#!topic/smoothie-charts/-Ywse8FCpKI%5B1-25%5D)\r\n *       Refactored by Krishna Narni, to support timestamp formatting function\r\n * v1.10: Switch to requestAnimationFrame, removed the now obsoleted options.fps, by Gergely Imreh\r\n * v1.11: options.grid.sharpLines option added, by @drewnoakes\r\n *        Addressed warning seen in Firefox when seriesOption.fillStyle undefined, by @drewnoakes\r\n * v1.12: Support for horizontalLines added, by @drewnoakes\r\n *        Support for yRangeFunction callback added, by @drewnoakes\r\n * v1.13: Fixed typo (#32), by @alnikitich\r\n * v1.14: Timer cleared when last TimeSeries removed (#23), by @davidgaleano\r\n *        Fixed diagonal line on chart at start/end of data stream, by @drewnoakes\r\n * v1.15: Support for npm package (#18), by @dominictarr\r\n *        Fixed broken removeTimeSeries function (#24) by @davidgaleano\r\n *        Minor performance and tidying, by @drewnoakes\r\n * v1.16: Bug fix introduced in v1.14 relating to timer creation/clearance (#23), by @drewnoakes\r\n *        TimeSeries.append now deals with out-of-order timestamps, and can merge duplicates, by @zacwitte (#12)\r\n *        Documentation and some local variable renaming for clarity, by @drewnoakes\r\n * v1.17: Allow control over font size (#10), by @drewnoakes\r\n *        Timestamp text won't overlap, by @drewnoakes\r\n * v1.18: Allow control of max/min label precision, by @drewnoakes\r\n *        Added 'borderVisible' chart option, by @drewnoakes\r\n *        Allow drawing series with fill but no stroke (line), by @drewnoakes\r\n * v1.19: Avoid unnecessary repaints, and fixed flicker in old browsers having multiple charts in document (#40), by @asbai\r\n * v1.20: Add SmoothieChart.getTimeSeriesOptions and SmoothieChart.bringToFront functions, by @drewnoakes\r\n * v1.21: Add 'step' interpolation mode, by @drewnoakes\r\n * v1.22: Add support for different pixel ratios. Also add optional y limit formatters, by @copacetic\r\n * v1.23: Fix bug introduced in v1.22 (#44), by @drewnoakes\r\n * v1.24: Fix bug introduced in v1.23, re-adding parseFloat to y-axis formatter defaults, by @siggy_sf\r\n * v1.25: Fix bug seen when adding a data point to TimeSeries which is older than the current data, by @Nking92\r\n *        Draw time labels on top of series, by @comolosabia\r\n *        Add TimeSeries.clear function, by @drewnoakes\r\n * v1.26: Add support for resizing on high device pixel ratio screens, by @copacetic\r\n * v1.27: Fix bug introduced in v1.26 for non whole number devicePixelRatio values, by @zmbush\r\n */\r\n\r\n;(function(exports) {\r\n\r\n  var Util = {\r\n    extend: function() {\r\n      arguments[0] = arguments[0] || {};\r\n      for (var i = 1; i < arguments.length; i++)\r\n      {\r\n        for (var key in arguments[i])\r\n        {\r\n          if (arguments[i].hasOwnProperty(key))\r\n          {\r\n            if (typeof(arguments[i][key]) === 'object') {\r\n              if (arguments[i][key] instanceof Array) {\r\n                arguments[0][key] = arguments[i][key];\r\n              } else {\r\n                arguments[0][key] = Util.extend(arguments[0][key], arguments[i][key]);\r\n              }\r\n            } else {\r\n              arguments[0][key] = arguments[i][key];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return arguments[0];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initialises a new <code>TimeSeries</code> with optional data options.\r\n   *\r\n   * Options are of the form (defaults shown):\r\n   *\r\n   * <pre>\r\n   * {\r\n   *   resetBounds: true,        // enables/disables automatic scaling of the y-axis\r\n   *   resetBoundsInterval: 3000 // the period between scaling calculations, in millis\r\n   * }\r\n   * </pre>\r\n   *\r\n   * Presentation options for TimeSeries are specified as an argument to <code>SmoothieChart.addTimeSeries</code>.\r\n   *\r\n   * @constructor\r\n   */\r\n  function TimeSeries(options) {\r\n    this.options = Util.extend({}, TimeSeries.defaultOptions, options);\r\n    this.clear();\r\n  }\r\n\r\n  TimeSeries.defaultOptions = {\r\n    resetBoundsInterval: 3000,\r\n    resetBounds: true\r\n  };\r\n\r\n  /**\r\n   * Clears all data and state from this TimeSeries object.\r\n   */\r\n  TimeSeries.prototype.clear = function() {\r\n    this.data = [];\r\n    this.maxValue = Number.NaN; // The maximum value ever seen in this TimeSeries.\r\n    this.minValue = Number.NaN; // The minimum value ever seen in this TimeSeries.\r\n  };\r\n\r\n  /**\r\n   * Recalculate the min/max values for this <code>TimeSeries</code> object.\r\n   *\r\n   * This causes the graph to scale itself in the y-axis.\r\n   */\r\n  TimeSeries.prototype.resetBounds = function() {\r\n    if (this.data.length) {\r\n      // Walk through all data points, finding the min/max value\r\n      this.maxValue = this.data[0][1];\r\n      this.minValue = this.data[0][1];\r\n      for (var i = 1; i < this.data.length; i++) {\r\n        var value = this.data[i][1];\r\n        if (value > this.maxValue) {\r\n          this.maxValue = value;\r\n        }\r\n        if (value < this.minValue) {\r\n          this.minValue = value;\r\n        }\r\n      }\r\n    } else {\r\n      // No data exists, so set min/max to NaN\r\n      this.maxValue = Number.NaN;\r\n      this.minValue = Number.NaN;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Adds a new data point to the <code>TimeSeries</code>, preserving chronological order.\r\n   *\r\n   * @param timestamp the position, in time, of this data point\r\n   * @param value the value of this data point\r\n   * @param sumRepeatedTimeStampValues if <code>timestamp</code> has an exact match in the series, this flag controls\r\n   * whether it is replaced, or the values summed (defaults to false.)\r\n   */\r\n  TimeSeries.prototype.append = function(timestamp, value, sumRepeatedTimeStampValues) {\r\n    // Rewind until we hit an older timestamp\r\n    var i = this.data.length - 1;\r\n    while (i >= 0 && this.data[i][0] > timestamp) {\r\n      i--;\r\n    }\r\n\r\n    if (i === -1) {\r\n      // This new item is the oldest data\r\n      this.data.splice(0, 0, [timestamp, value]);\r\n    } else if (this.data.length > 0 && this.data[i][0] === timestamp) {\r\n      // Update existing values in the array\r\n      if (sumRepeatedTimeStampValues) {\r\n        // Sum this value into the existing 'bucket'\r\n        this.data[i][1] += value;\r\n        value = this.data[i][1];\r\n      } else {\r\n        // Replace the previous value\r\n        this.data[i][1] = value;\r\n      }\r\n    } else if (i < this.data.length - 1) {\r\n      // Splice into the correct position to keep timestamps in order\r\n      this.data.splice(i + 1, 0, [timestamp, value]);\r\n    } else {\r\n      // Add to the end of the array\r\n      this.data.push([timestamp, value]);\r\n    }\r\n\r\n    this.maxValue = isNaN(this.maxValue) ? value : Math.max(this.maxValue, value);\r\n    this.minValue = isNaN(this.minValue) ? value : Math.min(this.minValue, value);\r\n  };\r\n\r\n  TimeSeries.prototype.dropOldData = function(oldestValidTime, maxDataSetLength) {\r\n    // We must always keep one expired data point as we need this to draw the\r\n    // line that comes into the chart from the left, but any points prior to that can be removed.\r\n    var removeCount = 0;\r\n    while (this.data.length - removeCount >= maxDataSetLength && this.data[removeCount + 1][0] < oldestValidTime) {\r\n      removeCount++;\r\n    }\r\n    if (removeCount !== 0) {\r\n      this.data.splice(0, removeCount);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initialises a new <code>SmoothieChart</code>.\r\n   *\r\n   * Options are optional, and should be of the form below. Just specify the values you\r\n   * need and the rest will be given sensible defaults as shown:\r\n   *\r\n   * <pre>\r\n   * {\r\n   *   minValue: undefined,                      // specify to clamp the lower y-axis to a given value\r\n   *   maxValue: undefined,                      // specify to clamp the upper y-axis to a given value\r\n   *   maxValueScale: 1,                         // allows proportional padding to be added above the chart. for 10% padding, specify 1.1.\r\n   *   yRangeFunction: undefined,                // function({min: , max: }) { return {min: , max: }; }\r\n   *   scaleSmoothing: 0.125,                    // controls the rate at which y-value zoom animation occurs\r\n   *   millisPerPixel: 20,                       // sets the speed at which the chart pans by\r\n   *   enableDpiScaling: true,                   // support rendering at different DPI depending on the device\r\n   *   yMinFormatter: function(min, precision) { // callback function that formats the min y value label\r\n   *     return parseFloat(min).toFixed(precision);\r\n   *   },\r\n   *   yMaxFormatter: function(max, precision) { // callback function that formats the max y value label\r\n   *     return parseFloat(max).toFixed(precision);\r\n   *   },\r\n   *   maxDataSetLength: 2,\r\n   *   interpolation: 'bezier'                   // one of 'bezier', 'linear', or 'step'\r\n   *   timestampFormatter: null,                 // optional function to format time stamps for bottom of chart\r\n   *                                             // you may use SmoothieChart.timeFormatter, or your own: function(date) { return ''; }\r\n   *   horizontalLines: [],                      // [ { value: 0, color: '#ffffff', lineWidth: 1 } ]\r\n   *   grid:\r\n   *   {\r\n   *     fillStyle: '#000000',                   // the background colour of the chart\r\n   *     lineWidth: 1,                           // the pixel width of grid lines\r\n   *     strokeStyle: '#777777',                 // colour of grid lines\r\n   *     millisPerLine: 1000,                    // distance between vertical grid lines\r\n   *     sharpLines: false,                      // controls whether grid lines are 1px sharp, or softened\r\n   *     verticalSections: 2,                    // number of vertical sections marked out by horizontal grid lines\r\n   *     borderVisible: true                     // whether the grid lines trace the border of the chart or not\r\n   *   },\r\n   *   labels\r\n   *   {\r\n   *     disabled: false,                        // enables/disables labels showing the min/max values\r\n   *     fillStyle: '#ffffff',                   // colour for text of labels,\r\n   *     fontSize: 15,\r\n   *     fontFamily: 'sans-serif',\r\n   *     precision: 2\r\n   *   }\r\n   * }\r\n   * </pre>\r\n   *\r\n   * @constructor\r\n   */\r\n  function SmoothieChart(options) {\r\n    this.options = Util.extend({}, SmoothieChart.defaultChartOptions, options);\r\n    this.seriesSet = [];\r\n    this.currentValueRange = 1;\r\n    this.currentVisMinValue = 0;\r\n    this.lastRenderTimeMillis = 0;\r\n  }\r\n\r\n  SmoothieChart.defaultChartOptions = {\r\n    millisPerPixel: 20,\r\n    enableDpiScaling: true,\r\n    yMinFormatter: function(min, precision) {\r\n      return parseFloat(min).toFixed(precision);\r\n    },\r\n    yMaxFormatter: function(max, precision) {\r\n      return parseFloat(max).toFixed(precision);\r\n    },\r\n    maxValueScale: 1,\r\n    interpolation: 'bezier',\r\n    scaleSmoothing: 0.125,\r\n    maxDataSetLength: 2,\r\n    grid: {\r\n      fillStyle: '#000000',\r\n      strokeStyle: '#777777',\r\n      lineWidth: 1,\r\n      sharpLines: false,\r\n      millisPerLine: 1000,\r\n      verticalSections: 2,\r\n      borderVisible: true\r\n    },\r\n    labels: {\r\n      fillStyle: '#ffffff',\r\n      disabled: false,\r\n      fontSize: 10,\r\n      fontFamily: 'monospace',\r\n      precision: 2\r\n    },\r\n    horizontalLines: []\r\n  };\r\n\r\n  // Based on http://inspirit.github.com/jsfeat/js/compatibility.js\r\n  SmoothieChart.AnimateCompatibility = (function() {\r\n    var requestAnimationFrame = function(callback, element) {\r\n          var requestAnimationFrame =\r\n            window.requestAnimationFrame        ||\r\n            window.webkitRequestAnimationFrame  ||\r\n            window.mozRequestAnimationFrame     ||\r\n            window.oRequestAnimationFrame       ||\r\n            window.msRequestAnimationFrame      ||\r\n            function(callback) {\r\n              return window.setTimeout(function() {\r\n                callback(new Date().getTime());\r\n              }, 16);\r\n            };\r\n          return requestAnimationFrame.call(window, callback, element);\r\n        },\r\n        cancelAnimationFrame = function(id) {\r\n          var cancelAnimationFrame =\r\n            window.cancelAnimationFrame ||\r\n            function(id) {\r\n              clearTimeout(id);\r\n            };\r\n          return cancelAnimationFrame.call(window, id);\r\n        };\r\n\r\n    return {\r\n      requestAnimationFrame: requestAnimationFrame,\r\n      cancelAnimationFrame: cancelAnimationFrame\r\n    };\r\n  })();\r\n\r\n  SmoothieChart.defaultSeriesPresentationOptions = {\r\n    lineWidth: 1,\r\n    strokeStyle: '#ffffff'\r\n  };\r\n\r\n  /**\r\n   * Adds a <code>TimeSeries</code> to this chart, with optional presentation options.\r\n   *\r\n   * Presentation options should be of the form (defaults shown):\r\n   *\r\n   * <pre>\r\n   * {\r\n   *   lineWidth: 1,\r\n   *   strokeStyle: '#ffffff',\r\n   *   fillStyle: undefined\r\n   * }\r\n   * </pre>\r\n   */\r\n  SmoothieChart.prototype.addTimeSeries = function(timeSeries, options) {\r\n    this.seriesSet.push({timeSeries: timeSeries, options: Util.extend({}, SmoothieChart.defaultSeriesPresentationOptions, options)});\r\n    if (timeSeries.options.resetBounds && timeSeries.options.resetBoundsInterval > 0) {\r\n      timeSeries.resetBoundsTimerId = setInterval(\r\n        function() {\r\n          timeSeries.resetBounds();\r\n        },\r\n        timeSeries.options.resetBoundsInterval\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes the specified <code>TimeSeries</code> from the chart.\r\n   */\r\n  SmoothieChart.prototype.removeTimeSeries = function(timeSeries) {\r\n    // Find the correct timeseries to remove, and remove it\r\n    var numSeries = this.seriesSet.length;\r\n    for (var i = 0; i < numSeries; i++) {\r\n      if (this.seriesSet[i].timeSeries === timeSeries) {\r\n        this.seriesSet.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    // If a timer was operating for that timeseries, remove it\r\n    if (timeSeries.resetBoundsTimerId) {\r\n      // Stop resetting the bounds, if we were\r\n      clearInterval(timeSeries.resetBoundsTimerId);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets render options for the specified <code>TimeSeries</code>.\r\n   *\r\n   * As you may use a single <code>TimeSeries</code> in multiple charts with different formatting in each usage,\r\n   * these settings are stored in the chart.\r\n   */\r\n  SmoothieChart.prototype.getTimeSeriesOptions = function(timeSeries) {\r\n    // Find the correct timeseries to remove, and remove it\r\n    var numSeries = this.seriesSet.length;\r\n    for (var i = 0; i < numSeries; i++) {\r\n      if (this.seriesSet[i].timeSeries === timeSeries) {\r\n        return this.seriesSet[i].options;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Brings the specified <code>TimeSeries</code> to the top of the chart. It will be rendered last.\r\n   */\r\n  SmoothieChart.prototype.bringToFront = function(timeSeries) {\r\n    // Find the correct timeseries to remove, and remove it\r\n    var numSeries = this.seriesSet.length;\r\n    for (var i = 0; i < numSeries; i++) {\r\n      if (this.seriesSet[i].timeSeries === timeSeries) {\r\n        var set = this.seriesSet.splice(i, 1);\r\n        this.seriesSet.push(set[0]);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Instructs the <code>SmoothieChart</code> to start rendering to the provided canvas, with specified delay.\r\n   *\r\n   * @param canvas the target canvas element\r\n   * @param delayMillis an amount of time to wait before a data point is shown. This can prevent the end of the series\r\n   * from appearing on screen, with new values flashing into view, at the expense of some latency.\r\n   */\r\n  SmoothieChart.prototype.streamTo = function(canvas, delayMillis) {\r\n    this.canvas = canvas;\r\n    this.delay = delayMillis;\r\n    this.start();\r\n  };\r\n\r\n  /**\r\n   * Make sure the canvas has the optimal resolution for the device's pixel ratio.\r\n   */\r\n  SmoothieChart.prototype.resize = function() {\r\n    // TODO this function doesn't handle the value of enableDpiScaling changing during execution\r\n    if (!this.options.enableDpiScaling || !window || window.devicePixelRatio === 1)\r\n      return;\r\n\r\n    var dpr = window.devicePixelRatio;\r\n    var width = parseInt(this.canvas.getAttribute('width'));\r\n    var height = parseInt(this.canvas.getAttribute('height'));\r\n\r\n    if (!this.originalWidth || (Math.floor(this.originalWidth * dpr) !== width)) {\r\n      this.originalWidth = width;\r\n      this.canvas.setAttribute('width', (Math.floor(width * dpr)).toString());\r\n      this.canvas.style.width = width + 'px';\r\n      this.canvas.getContext('2d').scale(dpr, dpr);\r\n    }\r\n\r\n    if (!this.originalHeight || (Math.floor(this.originalHeight * dpr) !== height)) {\r\n      this.originalHeight = height;\r\n      this.canvas.setAttribute('height', (Math.floor(height * dpr)).toString());\r\n      this.canvas.style.height = height + 'px';\r\n      this.canvas.getContext('2d').scale(dpr, dpr);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Starts the animation of this chart.\r\n   */\r\n  SmoothieChart.prototype.start = function() {\r\n    if (this.frame) {\r\n      // We're already running, so just return\r\n      return;\r\n    }\r\n\r\n    // Renders a frame, and queues the next frame for later rendering\r\n    var animate = function() {\r\n      this.frame = SmoothieChart.AnimateCompatibility.requestAnimationFrame(function() {\r\n        this.render();\r\n        animate();\r\n      }.bind(this));\r\n    }.bind(this);\r\n\r\n    animate();\r\n  };\r\n\r\n  /**\r\n   * Stops the animation of this chart.\r\n   */\r\n  SmoothieChart.prototype.stop = function() {\r\n    if (this.frame) {\r\n      SmoothieChart.AnimateCompatibility.cancelAnimationFrame(this.frame);\r\n      delete this.frame;\r\n    }\r\n  };\r\n\r\n  SmoothieChart.prototype.updateValueRange = function() {\r\n    // Calculate the current scale of the chart, from all time series.\r\n    var chartOptions = this.options,\r\n        chartMaxValue = Number.NaN,\r\n        chartMinValue = Number.NaN;\r\n\r\n    for (var d = 0; d < this.seriesSet.length; d++) {\r\n      // TODO(ndunn): We could calculate / track these values as they stream in.\r\n      var timeSeries = this.seriesSet[d].timeSeries;\r\n      if (!isNaN(timeSeries.maxValue)) {\r\n        chartMaxValue = !isNaN(chartMaxValue) ? Math.max(chartMaxValue, timeSeries.maxValue) : timeSeries.maxValue;\r\n      }\r\n\r\n      if (!isNaN(timeSeries.minValue)) {\r\n        chartMinValue = !isNaN(chartMinValue) ? Math.min(chartMinValue, timeSeries.minValue) : timeSeries.minValue;\r\n      }\r\n    }\r\n\r\n    // Scale the chartMaxValue to add padding at the top if required\r\n    if (chartOptions.maxValue != null) {\r\n      chartMaxValue = chartOptions.maxValue;\r\n    } else {\r\n      chartMaxValue *= chartOptions.maxValueScale;\r\n    }\r\n\r\n    // Set the minimum if we've specified one\r\n    if (chartOptions.minValue != null) {\r\n      chartMinValue = chartOptions.minValue;\r\n    }\r\n\r\n    // If a custom range function is set, call it\r\n    if (this.options.yRangeFunction) {\r\n      var range = this.options.yRangeFunction({min: chartMinValue, max: chartMaxValue});\r\n      chartMinValue = range.min;\r\n      chartMaxValue = range.max;\r\n    }\r\n\r\n    if (!isNaN(chartMaxValue) && !isNaN(chartMinValue)) {\r\n      var targetValueRange = chartMaxValue - chartMinValue;\r\n      var valueRangeDiff = (targetValueRange - this.currentValueRange);\r\n      var minValueDiff = (chartMinValue - this.currentVisMinValue);\r\n      this.isAnimatingScale = Math.abs(valueRangeDiff) > 0.1 || Math.abs(minValueDiff) > 0.1;\r\n      this.currentValueRange += chartOptions.scaleSmoothing * valueRangeDiff;\r\n      this.currentVisMinValue += chartOptions.scaleSmoothing * minValueDiff;\r\n    }\r\n\r\n    this.valueRange = { min: chartMinValue, max: chartMaxValue };\r\n  };\r\n\r\n  SmoothieChart.prototype.render = function(canvas, time) {\r\n    var nowMillis = new Date().getTime();\r\n\r\n    if (!this.isAnimatingScale) {\r\n      // We're not animating. We can use the last render time and the scroll speed to work out whether\r\n      // we actually need to paint anything yet. If not, we can return immediately.\r\n\r\n      // Render at least every 1/6th of a second. The canvas may be resized, which there is\r\n      // no reliable way to detect.\r\n      var maxIdleMillis = Math.min(1000/6, this.options.millisPerPixel);\r\n\r\n      if (nowMillis - this.lastRenderTimeMillis < maxIdleMillis) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.resize();\r\n\r\n    this.lastRenderTimeMillis = nowMillis;\r\n\r\n    canvas = canvas || this.canvas;\r\n    time = time || nowMillis - (this.delay || 0);\r\n\r\n    // Round time down to pixel granularity, so motion appears smoother.\r\n    time -= time % this.options.millisPerPixel;\r\n\r\n    var context = canvas.getContext('2d'),\r\n        chartOptions = this.options,\r\n        dimensions = { top: 0, left: 0, width: canvas.clientWidth, height: canvas.clientHeight },\r\n        // Calculate the threshold time for the oldest data points.\r\n        oldestValidTime = time - (dimensions.width * chartOptions.millisPerPixel),\r\n        valueToYPixel = function(value) {\r\n          var offset = value - this.currentVisMinValue;\r\n          return this.currentValueRange === 0\r\n            ? dimensions.height\r\n            : dimensions.height - (Math.round((offset / this.currentValueRange) * dimensions.height));\r\n        }.bind(this),\r\n        timeToXPixel = function(t) {\r\n          return Math.round(dimensions.width - ((time - t) / chartOptions.millisPerPixel));\r\n        };\r\n\r\n    this.updateValueRange();\r\n\r\n    context.font = chartOptions.labels.fontSize + 'px ' + chartOptions.labels.fontFamily;\r\n\r\n    // Save the state of the canvas context, any transformations applied in this method\r\n    // will get removed from the stack at the end of this method when .restore() is called.\r\n    context.save();\r\n\r\n    // Move the origin.\r\n    context.translate(dimensions.left, dimensions.top);\r\n\r\n    // Create a clipped rectangle - anything we draw will be constrained to this rectangle.\r\n    // This prevents the occasional pixels from curves near the edges overrunning and creating\r\n    // screen cheese (that phrase should need no explanation).\r\n    context.beginPath();\r\n    context.rect(0, 0, dimensions.width, dimensions.height);\r\n    context.clip();\r\n\r\n    // Clear the working area.\r\n    context.save();\r\n    context.fillStyle = chartOptions.grid.fillStyle;\r\n    context.clearRect(0, 0, dimensions.width, dimensions.height);\r\n    context.fillRect(0, 0, dimensions.width, dimensions.height);\r\n    context.restore();\r\n\r\n    // Grid lines...\r\n    context.save();\r\n    context.lineWidth = chartOptions.grid.lineWidth;\r\n    context.strokeStyle = chartOptions.grid.strokeStyle;\r\n    // Vertical (time) dividers.\r\n    if (chartOptions.grid.millisPerLine > 0) {\r\n      context.beginPath();\r\n      for (var t = time - (time % chartOptions.grid.millisPerLine);\r\n           t >= oldestValidTime;\r\n           t -= chartOptions.grid.millisPerLine) {\r\n        var gx = timeToXPixel(t);\r\n        if (chartOptions.grid.sharpLines) {\r\n          gx -= 0.5;\r\n        }\r\n        context.moveTo(gx, 0);\r\n        context.lineTo(gx, dimensions.height);\r\n      }\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n\r\n    // Horizontal (value) dividers.\r\n    for (var v = 1; v < chartOptions.grid.verticalSections; v++) {\r\n      var gy = Math.round(v * dimensions.height / chartOptions.grid.verticalSections);\r\n      if (chartOptions.grid.sharpLines) {\r\n        gy -= 0.5;\r\n      }\r\n      context.beginPath();\r\n      context.moveTo(0, gy);\r\n      context.lineTo(dimensions.width, gy);\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n    // Bounding rectangle.\r\n    if (chartOptions.grid.borderVisible) {\r\n      context.beginPath();\r\n      context.strokeRect(0, 0, dimensions.width, dimensions.height);\r\n      context.closePath();\r\n    }\r\n    context.restore();\r\n\r\n    // Draw any horizontal lines...\r\n    if (chartOptions.horizontalLines && chartOptions.horizontalLines.length) {\r\n      for (var hl = 0; hl < chartOptions.horizontalLines.length; hl++) {\r\n        var line = chartOptions.horizontalLines[hl],\r\n            hly = Math.round(valueToYPixel(line.value)) - 0.5;\r\n        context.strokeStyle = line.color || '#ffffff';\r\n        context.lineWidth = line.lineWidth || 1;\r\n        context.beginPath();\r\n        context.moveTo(0, hly);\r\n        context.lineTo(dimensions.width, hly);\r\n        context.stroke();\r\n        context.closePath();\r\n      }\r\n    }\r\n\r\n    // For each data set...\r\n    for (var d = 0; d < this.seriesSet.length; d++) {\r\n      context.save();\r\n      var timeSeries = this.seriesSet[d].timeSeries,\r\n          dataSet = timeSeries.data,\r\n          seriesOptions = this.seriesSet[d].options;\r\n\r\n      // Delete old data that's moved off the left of the chart.\r\n      timeSeries.dropOldData(oldestValidTime, chartOptions.maxDataSetLength);\r\n\r\n      // Set style for this dataSet.\r\n      context.lineWidth = seriesOptions.lineWidth;\r\n      context.strokeStyle = seriesOptions.strokeStyle;\r\n      // Draw the line...\r\n      context.beginPath();\r\n      // Retain lastX, lastY for calculating the control points of bezier curves.\r\n      var firstX = 0, lastX = 0, lastY = 0;\r\n      for (var i = 0; i < dataSet.length && dataSet.length !== 1; i++) {\r\n        var x = timeToXPixel(dataSet[i][0]),\r\n            y = valueToYPixel(dataSet[i][1]);\r\n\r\n        if (i === 0) {\r\n          firstX = x;\r\n          context.moveTo(x, y);\r\n        } else {\r\n          switch (chartOptions.interpolation) {\r\n            case \"linear\":\r\n            case \"line\": {\r\n              context.lineTo(x,y);\r\n              break;\r\n            }\r\n            case \"bezier\":\r\n            default: {\r\n              // Great explanation of Bezier curves: http://en.wikipedia.org/wiki/Bezier_curve#Quadratic_curves\r\n              //\r\n              // Assuming A was the last point in the line plotted and B is the new point,\r\n              // we draw a curve with control points P and Q as below.\r\n              //\r\n              // A---P\r\n              //     |\r\n              //     |\r\n              //     |\r\n              //     Q---B\r\n              //\r\n              // Importantly, A and P are at the same y coordinate, as are B and Q. This is\r\n              // so adjacent curves appear to flow as one.\r\n              //\r\n              context.bezierCurveTo( // startPoint (A) is implicit from last iteration of loop\r\n                Math.round((lastX + x) / 2), lastY, // controlPoint1 (P)\r\n                Math.round((lastX + x)) / 2, y, // controlPoint2 (Q)\r\n                x, y); // endPoint (B)\r\n              break;\r\n            }\r\n            case \"step\": {\r\n              context.lineTo(x,lastY);\r\n              context.lineTo(x,y);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        lastX = x; lastY = y;\r\n      }\r\n\r\n      if (dataSet.length > 1) {\r\n        if (seriesOptions.fillStyle) {\r\n          // Close up the fill region.\r\n          context.lineTo(dimensions.width + seriesOptions.lineWidth + 1, lastY);\r\n          context.lineTo(dimensions.width + seriesOptions.lineWidth + 1, dimensions.height + seriesOptions.lineWidth + 1);\r\n          context.lineTo(firstX, dimensions.height + seriesOptions.lineWidth);\r\n          context.fillStyle = seriesOptions.fillStyle;\r\n          context.fill();\r\n        }\r\n\r\n        if (seriesOptions.strokeStyle && seriesOptions.strokeStyle !== 'none') {\r\n          context.stroke();\r\n        }\r\n        context.closePath();\r\n      }\r\n      context.restore();\r\n    }\r\n\r\n    // Draw the axis values on the chart.\r\n    if (!chartOptions.labels.disabled && !isNaN(this.valueRange.min) && !isNaN(this.valueRange.max)) {\r\n      var maxValueString = chartOptions.yMaxFormatter(this.valueRange.max, chartOptions.labels.precision),\r\n          minValueString = chartOptions.yMinFormatter(this.valueRange.min, chartOptions.labels.precision);\r\n      context.fillStyle = chartOptions.labels.fillStyle;\r\n      context.fillText(maxValueString, dimensions.width - context.measureText(maxValueString).width - 2, chartOptions.labels.fontSize);\r\n      context.fillText(minValueString, dimensions.width - context.measureText(minValueString).width - 2, dimensions.height - 2);\r\n    }\r\n\r\n    // Display timestamps along x-axis at the bottom of the chart.\r\n    if (chartOptions.timestampFormatter && chartOptions.grid.millisPerLine > 0) {\r\n      var textUntilX = dimensions.width - context.measureText(minValueString).width + 4;\r\n      for (var t = time - (time % chartOptions.grid.millisPerLine);\r\n           t >= oldestValidTime;\r\n           t -= chartOptions.grid.millisPerLine) {\r\n        var gx = timeToXPixel(t);\r\n        // Only draw the timestamp if it won't overlap with the previously drawn one.\r\n        if (gx < textUntilX) {\r\n          // Formats the timestamp based on user specified formatting function\r\n          // SmoothieChart.timeFormatter function above is one such formatting option\r\n          var tx = new Date(t),\r\n            ts = chartOptions.timestampFormatter(tx),\r\n            tsWidth = context.measureText(ts).width;\r\n          textUntilX = gx - tsWidth - 2;\r\n          context.fillStyle = chartOptions.labels.fillStyle;\r\n          context.fillText(ts, gx - tsWidth, dimensions.height - 2);\r\n        }\r\n      }\r\n    }\r\n\r\n    context.restore(); // See .save() above.\r\n  };\r\n\r\n  // Sample timestamp formatting function\r\n  SmoothieChart.timeFormatter = function(date) {\r\n    function pad2(number) { return (number < 10 ? '0' : '') + number }\r\n    return pad2(date.getHours()) + ':' + pad2(date.getMinutes()) + ':' + pad2(date.getSeconds());\r\n  };\r\n\r\n  exports.TimeSeries = TimeSeries;\r\n  exports.SmoothieChart = SmoothieChart;\r\n\r\n})(typeof exports === 'undefined' ? this : exports);\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/smoothie.js","import IoTGraphContainer from './IoT.Graph.Container'\r\nimport IoTGraph from './IoT.Graph'\r\nimport './IoT.Graph.scss'\r\nimport './smoothie'\r\n\r\nmodule.exports = {\r\n  IoTGraphContainer,\r\n  IoTGraph\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/index.js","import IoTGraph from './IoT.Graph'\r\nimport React from 'react'\r\n\r\nexport default class IoTGraphContainer extends React.Component {\r\n\r\n  render () {\r\n\r\n    const { graphData, id, name} = this.props.item\r\n\r\n    const graphs = graphData.map((data, idx) => {\r\n\r\n      const graphName = `${name} - ${data.name}`\r\n\r\n      return (\r\n        <IoTGraph\r\n          dimensions={this.props.dimensions}\r\n          rows={graphData.length}\r\n          key={id + idx}\r\n          guid={id}\r\n          {...data}\r\n          name={graphName}\r\n        />\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"graph-container\">\r\n        {graphs}\r\n      </div>\r\n    )\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.Container.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/index.js??ref--2-2!../../../../../../node_modules/sass-loader/index.js!./IoT.Graph.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/index.js??ref--2-2!../../../../../../node_modules/sass-loader/index.js!./IoT.Graph.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/index.js??ref--2-2!../../../../../../node_modules/sass-loader/index.js!./IoT.Graph.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client/viewer.components/Viewer.Extensions.Dynamic/Viewing.Extension.IoT.2/IoT.Graph/IoT.Graph.scss\n// module id = 1552\n// module chunks = 21 53"],"sourceRoot":""}